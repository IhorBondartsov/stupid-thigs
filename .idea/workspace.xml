<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="3f1ece9a-5060-445c-bea6-93f8bc89847a" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/basic/concurrency/game with pkg sunc/condition.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/game with pkg sunc/once.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/game with pkg sunc/pool.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/canselation context/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/fan-in/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/mutex using channel/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/pipeline/v1/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/pipeline/v2/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/select/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/concurrency/patterns/timing out/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/defer/bench/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/defer/bench/main_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/basic/play with time/tiker.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mode/cmd/server/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/basic/channels/channels.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/basic/concurrency/channels/close channel/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/basic/concurrency/channels/close channel/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/basic/concurrency/notice.md" beforeDir="false" afterPath="$PROJECT_DIR$/basic/concurrency/notice.md" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>Create</find>
    </findStrings>
    <dirStrings>
      <dir>$PROJECT_DIR$/basic/concurrency/patterns/timing out</dir>
    </dirStrings>
  </component>
  <component name="GOROOT" path="$PROJECT_DIR$/../../../../../go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$/../../../.." />
      </list>
    </option>
  </component>
  <component name="ProjectId" id="1OzyeDIrQ7fEGMoMfshsM6RLJPr" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/basic/concurrency/patterns/pipeline/v1" />
      <recent name="$PROJECT_DIR$/basic/concurrency/patterns/pipeline/main" />
      <recent name="$PROJECT_DIR$/basic/initalization/pkg3/cmd" />
      <recent name="$PROJECT_DIR$/basic/initalization/pkg2/cmd" />
      <recent name="$PROJECT_DIR$/basic/initalization" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/basic/initalization/pkg1/cmd" />
      <recent name="$PROJECT_DIR$/basic/initalization/pkg1" />
      <recent name="$PROJECT_DIR$/basic/initalization/pkg2" />
      <recent name="$PROJECT_DIR$/basic/initalization/pkg3" />
      <recent name="$PROJECT_DIR$/basic" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build 2.go">
    <configuration name="go build 2.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stupid-things" />
      <working_directory value="$PROJECT_DIR$/" />
      <envs>
        <env name="GO111MODULE" value="off" />
      </envs>
      <kind value="FILE" />
      <filePath value="$APPLICATION_CONFIG_DIR$/scratches/2.go" />
      <package value="github.com/IhorBondartsov/stupid-things" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stupid-things" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/basic/defer/main.go" />
      <package value="github.com/IhorBondartsov/stupid-things" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stupid-things" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/basic/concurrency/game with pkg sunc/main.go" />
      <package value="github.com/IhorBondartsov/stupid-things" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build pool.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stupid-things" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/basic/concurrency/game with pkg sunc/pool.go" />
      <package value="github.com/IhorBondartsov/stupid-things" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build tiker.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stupid-things" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/basic/play with time/tiker.go" />
      <package value="github.com/IhorBondartsov/stupid-things" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build main.go (1)" />
      <item itemvalue="Go Build.go build main.go (2)" />
      <item itemvalue="Go Build.go build pool.go" />
      <item itemvalue="Go Build.go build tiker.go" />
      <item itemvalue="Go Build.go build 2.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build 2.go" />
        <item itemvalue="Go Build.go build tiker.go" />
        <item itemvalue="Go Build.go build pool.go" />
        <item itemvalue="Go Build.go build main.go (2)" />
        <item itemvalue="Go Build.go build main.go (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>direct</proxy>
  </component>
</project>